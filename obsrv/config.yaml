LOG_LEVEL: INFO

OCABOX_BUILD_FILE_NAME: "tree_build_example.py"   # file name witch tree build plans, this property can be set only in configuration/config.yaml or environment property

nats:
  host: "localhost"
  port: 4222
  streams:
    alpaca_config: "tic.config.observatory"
    plan_stream: "tic.status.{}.program.current"  # current loaded program
    status_stream: "tic.status.{}.program.state"  # actual state of current loaded stream

router:
  DefaultRouter:
    port: 5559
    url: '*'
    protocol: tcp
    timeout: 30
  SampleTestRouter:
    port: 5560
    url: '*'
    protocol: tcp
    timeout: 1
    test_deep:
      test_property: dir


comunication:
  ConditionalCycleQuery:
    default_delay: 5
    max_missed_msg: 3
    request_timeout: 30
  PeriodicCycleQuery:
    default_delay: 5
    max_missed_msg: 3
    request_timeout: 30
    min_delay: 0.5

data_collection:
  ValueRequest:
    default_request_timeout: 30
    time_of_data_tolerance: 60
  TreeAlpacaObservatory:
    timeout_multiplier: 0.8  # this should be 0 < x < 1
    api_version: 1
  TreeBaseRequestBlocker:
    default_control_time: 60
    max_control_time: 86400 # 24h
    white_list:
      GET: []
      PUT: []
    black_list:
      GET: []
      PUT: []
  TreeConditionalFreezer:
    max_unsuccessful_refreshes: 10
    alarm_timeout: 2 # WARNING, the value should be greater than the overall timeout
    min_time_of_data_tolerance: 0.2 # !!! Never set to 0 or less
  TreeCache:
    no_cachable_regex:
      - .*\.is_access$
  TreeCCTV:   # Ubiquity CCTV camera
    udm_camera_id: ''
    udm_host: ''
    udm_port: 443
    udm_user: 'api'
    udm_password: ''
  GuiderHandler:
    guider_source_name: guider

site:
  sample_key: 123
  client:
    ExsampleClient:
      opcja_ktora_nie_istnieje: false
      ticconnection:
        port: 5558
        url: localhost
        protocol: tcp
        timeout: 30


tree:
  test_sample_blocker:
    white_list:
      GET: []
      PUT:
        - telescope.some_val
        - telescope.some_val2
    black_list:
      GET:
        - telescope.some_val3
        - telescope.some_val4
  test_sample_freezer:
    max_unsuccessful_refreshes: 10
    alarm_timeout: 2
    min_time_of_data_tolerance: 0.2
  test_sample_provider:
    h:
      d: 9
    f:
      j: 7
  test_observatory:
    observatory:
      comment: Simulated observatory for tests
      lon: 51
      lat: 0
      elev: 667.0
      epoch: 2000
      protocol: alpaca
      address: http://localhost:80/api/v1
      components:
        dibi:
          kind: telescope
          comment: DIBI Autoslew Simulated Telescope
          device_number: 0
          min_alt: 15
          components:
            derotator:
              kind: rotator
              device_number: 0
        dome:
          kind: dome
          device_number: 0
        filterwheel:
          kind: filterwheel
          device_number: 0
          filters: {} # optional
        filterwheel2:  # second filterwheel but in alpaca is the same
          kind: filterwheel
          device_number: 1
          filters: # optional
            a: 1
            b: 2
        covercalibrator:
          kind: covercalibrator
          device_number: 0
        camera:
          kind: camera
          device_number: 0
        focuser:
          kind: focuser
          device_number: 0
          focus_tolerance: 5  # optional
        derotator:
          kind: rotator
          device_number: 0
        switch:
          kind: switch
          device_number: 0
        safetymonitor:
          kind: safetymonitor
          device_number: 0
        guider:
          kind: camera
          device_number: 1

  test_observatory_down:
    observatory:
      comment: Simulated observatory for tests
      lon: -24.47
      lat: -0.17
      elev: 667.0
      epoch: 2000
      protocol: alpaca
      address: http://10.255.255.1/api/v1  # this url address should return connection timeout error
      components:
        dibi:
          kind: telescope
          comment: DIBI Autoslew Simulated Telescope
          device_number: 0
          components:
            derotator:
              kind: rotator
              device_number: 0

